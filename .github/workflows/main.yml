name: FastAPI CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/fastapi-sentiment-app

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:

    - name: ⬇️ Checkout Repository
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 💾 Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 📦 Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: 🧪 Run Linter (flake8)
      run: |
        flake8 . --exclude=venv --max-line-length=120

    - name: ✅ Run Unit Tests
      run: |
        echo "No tests yet, define them under /tests"
        # pytest tests/

  docker:
    runs-on: ubuntu-latest
    needs: build-test-lint
    steps:

    - name: ⬇️ Checkout Repository
      uses: actions/checkout@v3

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Build and Push Docker Image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest

    - name: 📝 Output Image Digest
      run: echo "Image Digest: ${{ steps.docker_build.outputs.digest }}"

# Optional: notify on success or failure
#   - name: 📣 Slack Notification
#     if: always()
#     uses: 8398a7/action-slack@v3
#     with:
#       status: ${{ job.status }}
#       fields: repo,message,commit,author
#     env:
#       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
